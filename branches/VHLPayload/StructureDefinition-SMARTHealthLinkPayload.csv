"Id","Path","Slice Name","Alias(s)","Label","Min","Max","Must Support?","Is Modifier?","Is Summary?","Type(s)","Short","Definition","Comments","Requirements","Default Value","Meaning When Missing","Fixed Value","Pattern","Example","Minimum Value","Maximum Value","Maximum Length","Binding Strength","Binding Description","Binding Value Set","Code","Slicing Discriminator","Slicing Description","Slicing Ordered","Slicing Rules","Base Path","Base Min","Base Max","Condition(s)","Constraint(s)"
"SMARTHealthLinkPayload","SMARTHealthLinkPayload","","","",0,*,"","","","null {[]} {[]}
","SMART Health Link Payload (DRAFT)","SMART Health Link Payload (DRAFT)

This logical model constrains the Health Link Payload for a SMART Health Link

A SMART Health Link URI is generated from this payload according to the algorithm documented [here](https://build.fhir.org/ig/HL7/smart-health-cards-and-links/links-specification.html#smart-health-links-sharing-application-generates-a-smart-health-link-uri)

","","","","","","","","","",,,,,"",,,,"Base",0,*,"",""
"SMARTHealthLinkPayload.url","SMARTHealthLinkPayload.url","","","",1,1,"","","","string {[]} {[]}
","url","Manifest URL for this Health Link","","","","","","","","","",,,,,"",,,,"HealthLinkPayload.url",1,1,"",""
"SMARTHealthLinkPayload.key","SMARTHealthLinkPayload.key","","","",1,1,"","","","string {[]} {[]}
","Decryption key for processing files returned in the manifest. 43 characters, consisting of 32 random bytes base64urlencoded.","Decryption key for processing files returned in the manifest. 43 characters, consisting of 32 random bytes base64urlencoded.","","","","","","","","","",,,,,"",,,,"HealthLinkPayload.key",1,1,"",""
"SMARTHealthLinkPayload.exp","SMARTHealthLinkPayload.exp","","","",0,1,"","","","string {[]} {[]}
","Optional. Number representing expiration time in Epoch seconds, as a hint to help the Health Link Receiving Application determine if this QR is stale. (Note: epoch times should be parsed into 64-bit numeric types.)","Optional. Number representing expiration time in Epoch seconds, as a hint to help the Health Link Receiving Application determine if this QR is stale. (Note: epoch times should be parsed into 64-bit numeric types.)","","","","","","","","","",,,,,"",,,,"HealthLinkPayload.exp",0,1,"",""
"SMARTHealthLinkPayload.flag","SMARTHealthLinkPayload.flag","","","",0,1,"","","","string {[]} {[]}
","Optional. String created by concatenating single-character flags in alphabetical order:
'L' indicates the Health Link is intended for long-term use and manifest content can evolve over time; 
'P' indicates the Health Link requires a Passcode to resolves; and 'U' indicates the Health Link's url resolves to a single encrypted file accessible via GET, bypassing the manifest and SHALL NOT be used in combination with P.
</ul>
  ","Optional. String created by concatenating single-character flags in alphabetical order:
'L' indicates the Health Link is intended for long-term use and manifest content can evolve over time; 
'P' indicates the Health Link requires a Passcode to resolves; and 'U' indicates the Health Link's url resolves to a single encrypted file accessible via GET, bypassing the manifest and SHALL NOT be used in combination with P.
</ul>","","","","","","","","","",,,,,"",,,,"HealthLinkPayload.flag",0,1,"",""
"SMARTHealthLinkPayload.label","SMARTHealthLinkPayload.label","","","",0,1,"","","","string {[]} {[]}
","Optional. String no longer than 80 characters that provides a short description of the data behind the Health Link.","Optional. String no longer than 80 characters that provides a short description of the data behind the Health Link.","","","","","","","","","",,,,,"",,,,"HealthLinkPayload.label",0,1,"",""
"SMARTHealthLinkPayload.v","SMARTHealthLinkPayload.v","","","",0,1,"","","","string {[]} {[]}
","Optional. Integer representing the Health Links protocol version this Health Link conforms to. MAY be omitted when the default value (1) applies.","Optional. Integer representing the Health Links protocol version this Health Link conforms to. MAY be omitted when the default value (1) applies.","","","","","","","","","",,,,,"",,,,"HealthLinkPayload.v",0,1,"",""
"SMARTHealthLinkPayload.type","SMARTHealthLinkPayload.type","","","",0,0,"","","","code {[]} {[]}
","Classifying type code to distinguish different types of health links.  If not present then the Health Link is a SMART Health Link.","Classifying type code to distinguish different types of health links.  If not present then the Health Link is a SMART Health Link.","","","","","","","","","",,,,,"",,,,"HealthLinkPayload.type",0,1,"",""
